version: "3.7"

networks: 
    infrastructure:
        driver: bridge

services: 
    messaging-hub:
        container_name: foss_edge_messaging-engine
        env_file: "./.env"
        hostname: messenger 
        networks: 
            infrastructure: {}
        build: 
            context: ./messaging
            args:     
             - LOCALMQTTUSER
             - LOCALMQTTPASS
        ports: 
            # - "1883:1883"
            - "9001:9001"
            - "9002:1883"
    data-acquisition:
        container_name: foss_edge_data-acquisition
        env_file: "./.env"
        hostname: data-acquisition
        networks: 
            infrastructure: {}
        build:
            context: ./data-acquisition
            args:
               - LOCALMQTTUSER
               - LOCALMQTTPASS
               - ENVOPCUSER
               - ENVOPCPASS
               - MQTTHOSTNAME=messenger
        ports: 
            - "1880:1880"
            - "9000:1880"
    influxdatabase:
        container_name: foss_edge_influxdatabase
        # image: influxdb
        build: 
            context: ./database
            args:
               - DOCKER_INFLUXDB_INIT_MODE=setup
               - DOCKER_INFLUXDB_INIT_USERNAME
               - DOCKER_INFLUXDB_INIT_PASSWORD
               - DOCKER_INFLUXDB_INIT_ORG
               - DOCKER_INFLUXDB_INIT_BUCKET
               - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
        env_file: "./.env"
        hostname: influxdb
        ports: 
            - "8086:8086"
            - "9006:8086"
        networks: 
            infrastructure: {}
        volumes: 
            - type: volume
              source: influxdb-volume
              target: /var/lib/influxdbv2
        # environment: 
        #     - DOCKER_INFLUXDB_INIT_MODE=setup
        #     - DOCKER_INFLUXDB_INIT_USERNAME
        #     - DOCKER_INFLUXDB_INIT_PASSWORD
        #     - DOCKER_INFLUXDB_INIT_ORG
        #     - DOCKER_INFLUXDB_INIT_BUCKET
        #     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
    compute:
        container_name: foss_edge_compute-service
        env_file: "./.env"
        hostname: compute-service
        networks: 
            infrastructure: {}
        # image: nodered/node-red
        build:
            context: ./compute
            args: 
                - LOCALMQTTUSER
                - LOCALMQTTPASS
                - MQTTHOSTNAME=messenger
                - CLOUDMQTTIP
                - CLOUDMQTTPORT
                - CLOUDMQTTUSER
                - CLOUDMQTTPASS
                - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
        ports: 
            - "9004:1880"
volumes: 
    influxdb-volume: {}
    # nodered-compute-npm: {}
    # nodered-compute-data: {}
        
